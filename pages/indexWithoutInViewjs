import { useEffect, useState } from 'react';
import { useInView } from 'react-intersection-observer';

import Head from 'next/head';
import Header from '@/components/Header/Header';
import FeaturesSection from '@/components/Features/Features';
import PortfolioSection from '@/components/Portfolio/Portfolio';
import ServicesSection from '@/components/Services/Services'
import StagesSection from '@/components/Stages/Stages'
import ReviewsSection from '@/components/Reviews/Reviews';
import QuestionsSection from '@/components/Questions/Questions';
import Footer from '@/components/Footer/Footer'

export const getStaticProps = async () => {
  const [res1, res2, res3, res4] = await Promise.all([
    fetch(`http://localhost:1337/api/global?populate=*`),
    fetch(`http://localhost:1337/api/homepage?populate=*`),
    fetch(`http://localhost:1337/api/reviews?filters[onHomepage][$eq]=true`),
    fetch(`http://localhost:1337/api/portfolio?filters[onHomepage][$eq]=true&populate=*`),
  ]);

  const [data1, data2, data3, data4] = await Promise.all([
    res1.json(),
    res2.json(),
    res3.json(),
    res4.json()
  ])

  return {
    props: { global: data1, page: data2, reviews: data3, portfolio: data4 },

  }
};

const Home = ({ global, page, reviews, portfolio }) => {
  const Content = page.data.attributes;
  const Services = page.data.attributes.serviceCard;

  useEffect(() => {
    window.scrollTo(0, 0)
  }, [])

  //get window width 
  const [width, setWidth] = useState(0)

  const handleResize = () => setWidth(window.innerWidth)
  useEffect(() => {
    handleResize()
    window.addEventListener('resize', handleResize)
    return () => window.removeEventListener('resize', handleResize)
  }, [])

  //

  //get offset
  const [offset, setOffset] = useState(0);

  useEffect(() => {
    const onScroll = () => setOffset(window.pageYOffset);
    window.removeEventListener('scroll', onScroll);
    window.addEventListener('scroll', onScroll, { passive: true });
    return () => window.removeEventListener('scroll', onScroll);
  }, []);
  //

  //big screen catch
  const [isBigScren, setBigScren] = useState(false);

  if (width > 1000 && !isBigScren) {
    setBigScren(true)
  }
  //
  
  //set the need to display steps
  const [scrolled, setScrolled] = useState(false);

  if (isBigScren && offset > 2250 && !scrolled || !isBigScren && offset > 3000 && !scrolled) {
    setScrolled(true)
  }
  //

  return (

    <div  className={`body-sett`}>
      <Head>
        <title>Artea - web stuido</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <p style={{ position: `fixed`, background: `red`, color: `white`, zIndex: `10` }}>Scroll position: {offset}px<br></br>Window width: {width}px</p>
      <Header headerContent={Content} global={global} />
      <FeaturesSection featuresContent={Content} id="#features" />
      <PortfolioSection portfolio={portfolio} />
      <ServicesSection servicesContent={Services} />
      <div  className={` ${scrolled ? `inline` : `none`}`}><StagesSection /></div>
      <ReviewsSection Reviews={reviews.data} />
      <QuestionsSection />
      <Footer global={global} />

      <style jsx>{`
        .inline {
          display: inline;
        }
        .none {
          display: none;
        }
      `}</style>
    </div>
  )
};

export default Home;

